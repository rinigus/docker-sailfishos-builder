name: Cleanup packages

# Controls when the workflow will run
on:
  schedule:
    - cron: '30 3 * * 1'
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job name
  cleanup:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Delete untagged packages in sailfishos-open
        # https://github.com/Chizkiyahu/delete-untagged-ghcr-action
        uses: Chizkiyahu/delete-untagged-ghcr-action@v3
        with:
          # Personal access token (PAT) used to fetch the repository. The PAT is configured
          # with the local git config, which enables your scripts to run authenticated git
          # commands. The post-job step removes the PAT.
          # needs delete:packages permissions
          # required: true
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          token: ${{ secrets.PACKAGE_MAINTENANCE_TOKEN }}
          # Repository name or  name with owner
          # Delete only from repository name
          # Default: ${{ github.repository }}
          repository: 'docker-sailfishos-builder'
          # 'The repository owner name'
          # Default: ${{ github.repository_owner }}
          repository_owner: 'sailfishos-open'
          # 'The package names'
          # Delete only from comma separated package names
          # required: false
          # package_name: ''
          # Delete only package versions without tag
          # required: false
          # Default: true
          # choices: true, false
          untagged_only: true
          # Except untagged multiplatform packages from deletion
          # only for untagged_only=true
          # needs docker installed
          # except_untagged_multiplatform: false
          # the owner type
          # required: true
          # choices: org, user
          owner_type: 'org'

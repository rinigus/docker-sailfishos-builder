#!/bin/bash

set -e

# Default value for engine
ENGINE="podman"

# Function to display help text
usage() {
    echo "Usage: $0 [-e engine] ARCH RELEASE"
    echo ""
    echo "Optional arguments:"
    echo "  -e engine     Specify whether to use podman (default) or docker"
    echo "  -h            Display this help message"
    echo ""
    echo "Positional arguments:"
    echo "  ARCH          Sailfish OS architecture"
    echo "  RELEASE       Sailfish OS release version"
    exit 1
}

# Parse optional arguments
while getopts ":e:h" opt; do
  case ${opt} in
    e )
      ENGINE=$OPTARG
      ;;
    h )
      usage
      ;;
    \? )
      echo "Invalid option: -$OPTARG" 1>&2
      usage
      ;;
    : )
      echo "Option -$OPTARG requires an argument." 1>&2
      usage
      ;;
  esac
done

# Shift to move past the processed options
shift $((OPTIND -1))

# Check if we have exactly two positional arguments (ARCH and RELEASE)
if [ $# -ne 2 ]; then
    echo "Error: ARCH and RELEASE are required."
    usage
fi

SFOS_ARCH=$1
RELEASE=$2

case "$SFOS_ARCH" in
    "i486")
	DOCKER_PLATFORM_ARCH=amd64
	;;
    "aarch64")
	DOCKER_PLATFORM_ARCH=arm64
	;;
    "armv7hl")
	DOCKER_PLATFORM_ARCH=arm
	;;
    *)
	echo "Unknown architecture specified:" "$SFOS_ARCH"
	exit -1
esac

echo "Engine: $ENGINE"
echo "Architecture: $SFOS_ARCH"
echo "Release: $RELEASE"
echo "Docker arch: $DOCKER_PLATFORM_ARCH"

$ENGINE build \
    --build-arg SFOS_ARCH=$SFOS_ARCH --build-arg RELEASE=$RELEASE \
    --platform=linux/$DOCKER_PLATFORM_ARCH -t sailfishos-${SFOS_ARCH}-${RELEASE} \
    .
